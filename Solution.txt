Table - People

Create a table called Person that records a person's ID, Name, Age, Height ( in cm ), City, FavoriteColor.
ID should be an auto-incrementing id/primary key - Use type: INTEGER PRIMARY KEY AUTOINCREMENT

CREATE TABLE Person (Id INTEGER PRIMARY KEY AUTOINCREMENT,
                     Name STRING,
                     Age INTEGER,
                     Height INTEGER,
                     City STRING,
                     FavoriteColor STRING);

Add 5 different people into the Person database.

INSERT INTO Person (Name, Age, Height, City, FavoriteColor) 
VALUES ('Im', 32, 65, 'Fresno', 'White'),
       ('Eddy', 34, 67, 'Clovis', 'Red'),
       ('Jack', 33, 60, 'San Jose', 'Blue'),
       ('Michael', 30, 65, 'Visalia', 'Yellow'),
       ('Kou', 30, 65, 'Provo', 'Orange');

List all the people in the Person table by Height from tallest to shortest.

SELECT * FROM Person
ORDER BY Height DESC;

List all the people in the Person table by Height from shortest to tallest.

SELECT * FROM Person
ORDER BY Height ASC;

List all the people in the Person table by Age from oldest to youngest.

SELECT * FROM Person
ORDER BY Age DESC;

List all the people in the Person table older than age 20.

SELECT * FROM Person
WHERE Age > 20;

List all the people in the Person table that are exactly 18.

SELECT * FROM Person
WHERE Age = 18;

List all the people in the Person table that are less than 20 and older than 30.

SELECT * FROM Person
WHERE Age < 20 OR Age > 30;

List all the people in the Person table that are not 27 (Use not equals).

SELECT * FROM Person
WHERE Age != 27;

List all the people in the Person table where their favorite color is not red.

SELECT * FROM Person
WHERE FavoriteColor NOT LIKE 'Red';

List all the people in the Person table where their favorite color is not red or blue.

SELECT * FROM Person
WHERE FavoriteColor NOT LIKE 'blue' OR FavoriteColor NOT LIKE 'red';

List all the people in the Person table where their favorite color is orange or green.

SELECT * FROM Person
WHERE FavoriteColor LIKE 'Orange' OR FavoriteColor LIKE 'Green';

List all the people in the Person table where their favorite color is orange, green or blue (use IN).

SELECT * FROM Person
WHERE FavoriteColor IN ('Orange', 'Green', 'Blue'); 

List all the people in the Person table where their favorite color is yellow or purple (use IN).

SELECT * FROM Person
WHERE FavoriteColor IN ('Yellow','Purple'); 

Table - Order

Create a table called Orders that records: PersonID, ProductName, ProductPrice, Quantity.
PersonID should be different for different people.
Make orders for at least two different people.

CREATE TABLE Orders (PersonID INTEGER,
                     ProductName STRING,
                     ProductPrice FLOAT,
                     Quantity INTEGER);

INSERT INTO Orders VALUES (1234, 'CostCo Pizza', 9.50, 2),
						  (4321, 'Roasted Chicken', 6.87, 3);

Add 5 Orders to Order table.

INSERT INTO Orders VALUES (1234, 'AudioTechnica Headphones', 165.00, 1),
				   		  (1234, 'BlueFin BlueTooth Headphones', 20.32, 1),
                   		  (4321, 'Salmon Filet', 13.00, 3),
                   		  (4321, 'Shark Fin Soup', 15.99, 1),
                   		  (4321, 'Ramen Noodle', 25.00, 2);

Select all the records from the Order table.

SELECT * FROM Orders;

Calculate the total number of products ordered.

SELECT SUM(Quantity) FROM Orders;

Calculate the total order price.

SELECT SUM(ProductPrice) FROM Orders;

Calculate the total order price by a single PersonID.

SELECT SUM(ProductPrice) FROM Orders WHERE PersonID = 1234;
                                   
Table - Artists

Add 3 new Artists to the Artist table. ( It's already created )

INSERT INTO Artist (Name) VALUES ('Madonna'), ('Rihanna'), ('Drake');

Select 10 artists in reverse alphabetical order.

SELECT * FROM Artist ORDER BY Name DESC LIMIT 10;

Select 5 artists in alphabetical order.

SELECT * FROM Artist ORDER BY Name ASC LIMIT 5;

Select all artists that start with the word "Black".

SELECT * FROM Artist WHERE Name LIKE 'Black%';

Select all artists that contain the word "Black".

SELECT * FROM Artist WHERE Name LIKE '%Black%';

Table - Employee

List all Employee first and last names only that live in Calgary.

SELECT FirstName, LastName FROM Employee WHERE City = 'Calgary';

Find the first and last name and birthdate for the youngest employee.

SELECT FirstName, LastName, MIN(BirthDate) FROM Employee;

Find the first and last name and birthdate for the oldest employee.

SELECT FirstName, LastName, Max(BirthDate) FROM Employee;

Find everyone that reports to Nancy Edwards (Use the ReportsTo column).

SELECT * FROM Employee WHERE ReportsTo = 2;

Count how many people live in Lethbridge.

SELECT Count(*) FROM Employee WHERE City = 'Lethbridge';

Table - Invoice

Count how many orders were made from the USA.

SELECT * FROM Invoice WHERE BillingCountry = 'USA';

Find the largest order total amount.

SELECT MAX(Total) FROM Invoice;

Find the smallest order total amount.

SELECT MIN(Total) FROM Invoice;

Find all orders bigger than $5.

SELECT * FROM Invoice WHERE Total > 5;

Count how many orders were smaller than $5.

SELECT COUNT(*) FROM Invoice WHERE Total < 5;

Count how many orders were in CA, TX, or AZ (use IN).

SELECT * FROM Invoice WHERE BillingState IN ('CA','TX','AZ')

Get the average total of the orders.

SELECT AVG(Total) FROM Invoice;